spring.application.name=oauth2_sample


spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3307/oauthdb?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=1234

spring.jpa.database=mysql
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true

# jwt
# expiration time unit : minute
jwt.expiration=3000
# base64 encoded String
jwt.secret=bXktand0LXNlY3JldC1rZXktc2hvdWxkLWJlLXZlcnktbG9uZy1hbmQtcmFuZG9t
#jwt.issuer=myservice
#jwt.access-token.expiration=3600000
#jwt.refresh-token.expiration=604800000

oauth.google.client-id=
oauth.google.client-secret=
oauth.google.redirect-uri=

# kakao does not use secret keys
oauth.kakao.client-id=
oauth.kakao.redirect-uri=

spring.security.oauth2.client.registration.google.client-id=
spring.security.oauth2.client.registration.google.client-secret=
spring.security.oauth2.client.registration.google.scope=openid,email,profile
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=http://openidconnect.googleapis.com/v1/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub